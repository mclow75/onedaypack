# Generated by Django 3.2 on 2021-05-17 04:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.IntegerField(verbose_name='Длительность консультации, минут')),
                ('advice_type', models.IntegerField(choices=[(1, '01 Общие вопросы в компетенции ПФР'), (2, '02 Вопросам с предоставлением персональной информации и использованием «кодового слова»')], verbose_name='Тип консультации')),
                ('advice_result', models.IntegerField(choices=[(1, '01 Представлена консультация'), (2, '02 Гражданин записан на прием в ТО ПФР'), (3, '03 Звонок переведен на специалиста ПФР'), (4, '04 Гражданину предложено подготовить письменное обращение'), (5, '05 Планируется обратная связь с гражданином(исходящее информирование)'), (6, '06 Осуществлена запись для выезда специалиста КС на дом'), (7, '07 Осуществлена запись о предварительном заказе документов')], verbose_name='Результаты консультирования')),
                ('category', models.IntegerField(choices=[(0, '0 Физическое лицо'), (1, '1 Юридическое лицо')], verbose_name='Физ. или Юр. лицо')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Обращение',
                'verbose_name_plural': 'Обращения',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='call_log.topic')),
            ],
            options={
                'verbose_name': 'Тема',
                'verbose_name_plural': 'Темы',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('advice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='call_log.advice')),
                ('edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='call_log.note')),
            ],
            options={
                'verbose_name': 'Примечание',
                'verbose_name_plural': 'Примечания',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Подразделение-регистратор')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='call_log.department', verbose_name='Головное подразделение')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sni14', models.CharField(blank=True, default='123-456-789 00', max_length=14, verbose_name='СНИЛС')),
                ('fio', models.CharField(blank=True, default='', max_length=200, verbose_name='Ф.И.О.')),
                ('contact', models.JSONField(null=True, verbose_name='Контакты')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Редактор')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='advice',
            name='contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='call_log.contact'),
        ),
        migrations.AddField(
            model_name='advice',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='call_log.department'),
        ),
        migrations.AddField(
            model_name='advice',
            name='edited_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='advice',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='call_log.topic', verbose_name='Тема'),
        ),
    ]
